{
  "filename": "customPage.md",
  "__html": "<h2>自定义页面</h2>\n<p>docsite整体架构基于react，所以自定义页面需要有一定的react基础，可查看<a href=\"https://reactjs.org/\">react官网</a>进行学习。</p>\n<p>docsite内置模板默认包含首页、文档页、博客列表页、博客详情页、社区页，分别对应<code>src/pages</code>目录下的<code>home</code>、<code>documentation</code>、<code>blog</code>、<code>blogDetail</code>、<code>community</code>。对于js和css资源，docsite在构建时，会将<code>src/pages</code>目录下的文件夹名称作为js和css资源的名称，在<code>build</code>目录中生成对应的js和css文件。</p>\n<h3>页面编写</h3>\n<p>自定义页面时，请在<code>src/pages</code>目录下新建一个文件夹，docsite会将文件夹下的<code>index.jsx</code>和<code>index.scss</code>文件作为页面进行处理。</p>\n<p>一个自定义页面的<code>index.jsx</code>主体结构如下：</p>\n<pre><code class=\"language-jsx\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CustomPage</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Language</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>(props) {\n    <span class=\"hljs-keyword\">super</span>(props);\n    <span class=\"hljs-comment\">// others</span>\n  }\n\n  render() {\n    <span class=\"hljs-keyword\">const</span> language = <span class=\"hljs-keyword\">this</span>.getLanguage();\n    <span class=\"hljs-comment\">// others</span>\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Header</span>\n          <span class=\"hljs-attr\">currentKey</span>=<span class=\"hljs-string\">\"customKey\"</span> // <span class=\"hljs-attr\">key</span> <span class=\"hljs-attr\">defined</span> <span class=\"hljs-attr\">in</span> <span class=\"hljs-attr\">site_config</span>/<span class=\"hljs-attr\">site.js</span> <span class=\"hljs-attr\">pageMenu</span>\n          <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"normal\"</span>\n          <span class=\"hljs-attr\">logo</span>=<span class=\"hljs-string\">\"/img/docsite.png\"</span>\n          <span class=\"hljs-attr\">language</span>=<span class=\"hljs-string\">{language}</span>\n          <span class=\"hljs-attr\">onLanguageChange</span>=<span class=\"hljs-string\">{this.onLanguageChange}</span>\n        /&gt;</span>\n        {/* others */}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    )\n  }\n}\n\n<span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">'root'</span>) &amp;&amp; ReactDOM.render(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CustomPage</span> /&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">'root'</span>));\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> CustomPage;\n</code></pre>\n<p>现对整个页面作下说明：</p>\n<ol>\n<li>整个页面需继承<code>src/components/language</code>组件，该组件提供两个方法<code>onLanguageChange</code>和<code>getLanguage</code>，分别用于语言切换（传递给Header组件即可）和获取语言版本。</li>\n<li>为支持SEO，docsite会调用<code>ReactDOMServer.render</code>将页面jsx渲染成一段静态HTML字符串，并最终组合到页面当中去，所以在<code>constructor</code>、<code>componentWillMount</code>、<code>render</code>等服务端渲染会调用的生命周期方法中，不要出现未定义的或者无法识别的变量和方法，包括其依赖的组件，否则会出现错误。</li>\n<li><code>document.getElementById('root') &amp;&amp; ReactDOM.render(&lt;CustomPage /&gt;, document.getElementById('root'));</code>用于正常的页面渲染，<code>&amp;&amp;</code>前一句防止在服务端渲染时dom节点不存在导致报错。</li>\n<li><code>export default CustomPage;</code>导出页面用于docsite将页面渲染成一段静态HTML字符串。</li>\n</ol>\n<h3>语言包配置</h3>\n<p>为支持国际化，需要配置页面的国际化文案。在<code>site_config</code>目录下新建一个文件，将所需要的文案配置其中，并在页面中引入。其基本结构如下：</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-string\">'zh-cn'</span>: {\n\n  },\n  <span class=\"hljs-string\">'en-us'</span>: {\n\n  },\n}\n</code></pre>\n<h3>添加到站点</h3>\n<p>页面定义完成后，需要将其添加到站点中。在<code>site_config/site.js</code>文件中的<code>pageMenu</code>中定义页面的<code>key</code>、<code>title</code>、<code>link</code>等。</p>\n<p>其中<code>key</code>用于<code>Header</code>的<code>currentKey</code>，设置顶部菜单的选中状态。<code>title</code>用于顶部菜单的显示标题。<code>link</code>用于设置访问链接，链接设置规则如下：</p>\n<ol>\n<li>需以<code>/zh-cn</code>或<code>/en-us</code>开头。</li>\n<li>假如页面所在的文件夹名称为custom，则英文访问链接为<code>/en-us/custom/index.html</code>，中文访问链接为<code>/zh-cn/custom/index.html</code>。</li>\n</ol>\n",
  "link": "/zh-cn/docs/customPage.html",
  "meta": {
    "title": "自定义页面"
  }
}